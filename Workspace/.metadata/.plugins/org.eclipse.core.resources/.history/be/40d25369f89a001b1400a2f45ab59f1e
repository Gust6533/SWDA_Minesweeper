
import java.util.Random;



public class Board {
	private Boolean[][] mines; //location of the mines
	private int size; //the size of the board
	private Boolean[][] hasBeenClicked; //If the space has been clicked or not
	private int minesLeft; // Number of Mines left on the field

	public Board()
	{
		//set to default of normal
		this(diffculty.Meduim);
	}
	
	public Board( diffculty dif )
	{
		int i, j;
		int minesPlaces = 0;
		
		if(dif == diffculty.Easy)
		{
			size = 10;
			minesLeft = 8;
			mines = new Boolean [size][size];	
			hasBeenClicked = new Boolean [size][size];
			minesPlaces = minesLeft;	
		}
		else if ( dif == diffculty.Meduim )
		{
			size = 20;
			minesLeft = 13;
			mines = new Boolean [size][size];	
			hasBeenClicked = new Boolean [size][size];
			minesPlaces = minesLeft;	
		}
		else
		{
			size = 30;
			minesLeft = 20;
			mines = new Boolean [size][size];	
			hasBeenClicked = new Boolean [size][size];
			minesPlaces = minesLeft;		
		}
	
		//set up game board 
		//set everything to false
		for(i = 0; i < size; i ++)
		{
			for(j = 0; j < size; j ++)
			{
				hasBeenClicked[i] [j] = false;
				mines[i] [j] = false;
			}
			
		}
		
		// place mines into board randomly, making sure there is not already a mine there
		Random rand = new Random();
		
		while(minesPlaces > 0)
		{
			i = rand.nextInt(size);
			j = rand.nextInt(size);
			if (mines[i][j] == false)
			{
				System.out.println("Mine at: " + Integer.toString(i) + "," + Integer.toString(j) );
				mines[i][j] = true;
				minesPlaces --;
			}
		} 
		
	}
	
	//returns if the spot on the board is a mine or not
	public Boolean isMine(int x, int y) 
	{
		return mines[x][y];
		
	}
	
	//returns if the spot has been clicked or not
	public Boolean beenClicked(int x, int y)
	{
		return hasBeenClicked[x][y];
		
	}
	
	//set the item to clicked and then returns if there is a mine there to end the game or not 
	public Boolean setClicked(int x, int y)
	{
		hasBeenClicked[x][y] = true;
		
		return mines[x][y];
		
	}
	
	//number of mines
	public int getminesLeft()
	{
		return minesLeft;
	}
	
	public int getsize()
	{
		return size;
	}
	
	public int mineNextTo(int x, int y)
	{
		//determine x and y coords to do the search on
		int xS,yS, xE, yE;
		if(x > 0)
		{
			xS = x - 1;
		}
		else
		{
			xS = 0;
		}
		
		if(y > 0)
		{
			yS = y - 1;
		}
		else
		{
			yS = 0;
		}
		
		if(x < size - 1)
		{
			xS = x - 1;
		}
		else
		{
			xS = 0;
		}
		
		return 0;
	}
}
